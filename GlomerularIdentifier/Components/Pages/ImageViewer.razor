@page "/image-viewer"
@inject IJSRuntime JS
@implements IAsyncDisposable
@rendermode InteractiveServer

<div @onwheel="e => MouseWheelEventHandler(e)" id="openseadragon-viewer" style="width: 800px; height: 600px;"></div>
@code {

    [CascadingParameter]
    public required CascadingAppState AppState {get; set;}

    private IJSObjectReference? module;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            /*
                Change the {PATH} placeholder in the next line to the path of
                the collocated JS file in the app. Examples:

                ./Components/Pages/JsCollocation2.razor.js (.NET 8 or later)
                ./Pages/JsCollocation2.razor.js (.NET 7 or earlier)
            */
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./Components/Pages/ImageViewer.razor.js");
            await InitializeViewerAsync();
        }
    }

    private async Task InitializeViewerAsync()
    {
        if(module is not null)
        {

            await module.InvokeVoidAsync("initializeOpenSeadragon", "openseadragon-viewer", new
            {
                tileSources = new[]
                {
                    "https://openseadragon.github.io/example-images/highsmith/highsmith.dzi"
                },
        
                initialZoom = AppState.ZoomLevel
            });
        }
                Console.WriteLine(AppState.ZoomLevel);
    }

    private async Task MouseWheelEventHandler(WheelEventArgs eventArgs)
    {
        if(eventArgs.DeltaY>0) // zooming out
        {
            AppState.ZoomLevel/=1.1;
        }
        if(eventArgs.DeltaY<0) // zooming in
        {
            AppState.ZoomLevel*=1.1;
        }
        Console.WriteLine(AppState.ZoomLevel);

    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}